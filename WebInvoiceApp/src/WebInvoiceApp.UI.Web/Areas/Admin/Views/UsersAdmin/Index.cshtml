@model IEnumerable<WebInvoiceApp.Common.Identity.Users.ApplicationUser>
@{
    ViewBag.Title = "Admin Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-md-12 col-lg-12 col-sm-12 panel-collapse panel-default">


    <div class="panel-heading">
        <h4><i class="fa fa-adn"></i>&nbsp;&nbsp;&nbsp;Users Administration</h4>
    </div>

    <!--/ Aqui entram os conteúdos -->
    <div class="animated fadeInRightBig">
        <br />
        @if (ViewBag.message != null)
        {
            <div class="alert alert-success alert-dismissable">
                <h3><i class="fa fa-align-justify"></i> <strong>Tabela com a lista dos usuários registrados no sistema</strong></h3>
            </div>
        }


        <div class="row">
            <div class="col-lg-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <div class="ibox-tools">
                            <!--/ Botão create -->
                            <a href="/Home/Index" class="btn btn-primary" data-toggle="tooltip" data-placement="bottom" title="back to Home" data-original-title="Back to Home"> <i class="glyphicon glyphicon-home"></i></a>
                            <button class="btn btn-primary createUser" data-toggle="tooltip" data-placement="bottom" title="Add New User" data-original-title="Add New User"> <i class="glyphicon glyphicon-user"></i> </button>
                            @if (Request.IsAuthenticated && User.IsInRole("Admin"))
                            {
                                <a href="~/RolesAdmin" class="btn btn-success" data-toggle="tooltip" data-placement="bottom" title="Adds a new Access Policy so it can be associated with Users." data-original-title="Adds a new Access Policy so it can be associated with Users.">
                                    <i class="fa fa-cogs"></i>&nbsp;&nbsp;Create New Role
                                </a>
                            }
                        </div>
                    </div>
                    <hr />
                    <div class="ibox-content">
                        @*<table id="responsive-datatables" class="table table-striped dataTables_wrapper table-responsive table-bordered table-hover cursomvc display" style="width:100%">*@
                        @*<table id="myTable" class="table table-striped table-bordered nowrap" cellspacing="0" style="width:100%">*@
                        <table id="basic-datatables" class="table table-striped table-bordered" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th data-class="expand">@Html.DisplayNameFor(model => model.UserName)</th>
                                    <th>@Html.DisplayNameFor(model => model.Email)</th>
                                    <th>Detalhes/Edição</th>
                                    <th>Acessos</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Email)</td>
                                        <td>
                                            @*<button class="btn btn-default btn-transparent details" data-id="@item.Id" data-toggle="tooltip" data-placement="bottom" title="Detalhes do Usuário" data-original-title="Detalhes do Usuário"><i class="glyphicon glyphicon-file"></i></button>*@
                                            @*<button class="btn btn-danger btn-transparent delete" data-id="@item.Id" data-toggle="tooltip" data-placement="bottom" title="Excluir Usuário" data-original-title="Excluir Usuário"><i class="glyphicon glyphicon-trash"></i></button>*@
                                            @*@if (@Html.DisplayFor(modelItem => item.UserName).ToString() == "Administrator")
                                                {
                                                    <button class="btn btn-primary btn-transparent edit disabled" data-id="@item.Id" data-toggle="tooltip" data-placement="bottom" title="Editar Usuário e seu Perfil" data-original-title="Editar Usuário e seu Perfil"><i class="glyphicon glyphicon-edit"></i></button>
                                                    @Html.ActionLink(" ", "DeleteUser", new { id = item.Id }, new { @class = "btn btn-danger glyphicon glyphicon-trash disabled", title = "Delete", onclick = "return deletealertuser(this, event);;" })
                                                }
                                                else
                                                {
                                                    <button class="btn btn-primary btn-transparent edit" data-id="@item.Id" data-toggle="tooltip" data-placement="bottom" title="Editar Usuário e seu Perfil" data-original-title="Editar Usuário e seu Perfil"><i class="glyphicon glyphicon-edit"></i></button>
                                                    @Html.ActionLink(" ", "DeleteUser", new { id = item.Id }, new { @class = "btn btn-danger glyphicon glyphicon-trash", title = "Delete", onclick = "return deletealertuser(this, event);;" })
                                                    <a class="btn btn-danger glyphicon glyphicon-trash delete" data-id="@item.Id" title="Delete Issuer" />
                                            }*@


                                            <button class="btn btn-primary btn-transparent edit" data-id="@item.Id" data-toggle="tooltip" data-placement="bottom" title="Editar Usuário e seu Perfil" data-original-title="Editar Usuário e seu Perfil"><i class="glyphicon glyphicon-edit"></i></button>
                                            @Html.ActionLink(" ", "DeleteUser", new { id = item.Id }, new { @class = "btn btn-danger glyphicon glyphicon-trash", title = "Delete", onclick = "return deletealertuser(this, event);;" })
                                            @*<a class="btn btn-danger glyphicon glyphicon-trash delete" data-id="@item.Id" title="Delete Issuer" />*@
                                        </td>
                                        <td>
                                            <button class="btn btn-default setClaim" data-id="@item.Id" data-toggle="tooltip" data-placement="bottom" title="Acessos do Usuário" data-original-title="Acessos do Usuário"><i class="glyphicon glyphicon-log-in"></i></button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <!--/ Aqui entram os conteúdos -->

</div>

<div class="modal fade modal-style6"
     id="modal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="myModalLabel"
     aria-hidden="true">
    @* MODAL SERÁ CARREGADO AQUI! *@
</div>


@section Scripts {


    <script type="text/javascript">

        $(document).ready(function () {
            $('.cursomvc').DataTable({
                dom: 'T<"clear">lfrtip',
                tableTools: {
                    "sSwfPath": "../../myPlugins/copy_csv_xls_pdf.swf"
                }
            });
        });


        /* Start Admin Roles ------------------------------------------------------------- */

        //$(".createClaim").click(function () {
        //    $("#modal").load("/UsersAdmin/CreateClaim", function () {
        //        $("#modal").modal();
        //    });
        //});

        //$(".setClaim").click(function () {
        //    var id = $(this).attr("data-id");
        //    $("#modal").load("/UsersAdmin/SetUserClaim?id=" + id, function () {
        //        $("#modal").modal();
        //    });
        //});

        $(".createRole").click(function () {
            $("#modal").load("/Admin/Role/CreateRole", function () {
                $("#modal").modal();
            });
        });

        $(".listRole").click(function () {
            $("#modal").load("/Admin/Role/ListRole", function () {
                $("#modal").modal();
            });
        });
        /*End Admin Roles ------------------------------------------------------------- */

        /*Start Admin Users ------------------------------------------------------------- */
        $(".createUser").click(function () {
            $("#modal").load("/Admin/UsersAdmin/Create", function () {
                $("#modal").modal();
            });
        });

        //$(".createUser").click(function () {
        //    //swal("Cancelled", "Your file is safe.", "error");
        //    $("#ModalNewService").modal();
        //});

        $(".edit").click(function () {
            var id = $(this).attr("data-id");
            $("#modal").load("/Admin/UsersAdmin/Edit?id=" + id, function () {
                $("#modal").modal();
            });
        });

        $(".details").click(function () {
            var id = $(this).attr("data-id");
            $("#modal").load("/Admin/UsersAdmin/Details?id=" + id, function () {
                $("#modal").modal();
            });
        });

        $(".delete").click(function () {
            var id = $(this).attr("data-id");
            $("#modal").load("/UsersControl/Delete?id=" + id, function () {
                $("#modal").modal();
            });
        });

        /*End Admin Users ------------------------------------------------------------- */





    </script>

    @* DELETE User *@
    <script>
        function deletealertuser(ctl, event) {
            // STORE HREF ATTRIBUTE OF LINK CTL (THIS) BUTTON
            var defaultAction = $(ctl).prop("href");
            // CANCEL DEFAULT LINK BEHAVIOUR
            event.preventDefault();
            swal({
                title: "Are you sure?",
                text: "You will not be able to recover this file!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                cancelButtonClass: "btn-primary",
                cancelButtonText: "No, cancel!",
                closeOnConfirm: false,
                closeOnCancel: true
            },
                function (isConfirm) {
                    if (isConfirm) {
                        swal({ title: "Deleted!", text: "Your file has been deleted.", type: "success", confirmButtonText: "OK!", closeOnConfirm: true },
                            function () {
                                // RESUME THE DEFAULT LINK ACTION
                                $("#basic-datatables").change(location.reload());
                                window.location.href = defaultAction;
                                return true;
                            });
                    } else {
                        swal("Cancelled", "Your file is safe.", "error");
                        return false;
                    }
                });
        }
    </script>

    @* DELETE com Ajax Sweet Alert *@
    <script>
        $(".delete").click(function () {
            var id = $(this).attr("data-id");

            //Sweet Alert start here
            event.preventDefault();
            swal({
                title: "Are you sure?",
                text: "You will not be able to recover this Issuer!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                cancelButtonClass: "btn-primary",
                cancelButtonText: "No, cancel!",
                closeOnConfirm: false,
                closeOnCancel: true
            },
                function (isConfirm) {
                    if (isConfirm) {
                        //Action is here
                        $.ajax({
                            type: 'get',
                            dataType: 'json',
                            cache: false,
                            url: "/Admin/UserAdmin/DeleteUser",
                            data: {
                                Id: id
                            },
                            success: function (response, textStatus, jqXHR) {
                                if (response.deleted == "true") {
                                    swal({ title: "Deleted!", text: "Your User has been deleted.", type: "success", confirmButtonText: "OK!", closeOnConfirm: true });
                                    //location.reload();
                                    $("#myTable").change(location.reload());

                                    return true;
                                }
                                else {
                                    swal({ title: "Error!", text: "Unable to delete User!\n Try again.", type: "error", confirmButtonText: "OK!", closeOnConfirm: true });
                                }
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                swal({ title: "Error!", text: errorThrown, type: "error", confirmButtonText: "OK!", closeOnConfirm: true });
                                //alert('Error - ' + errorThrown);
                            }
                        });
                    } else {
                        swal("Cancelled", "Your Issuer is safe.", "error");
                        return false;
                    }
                });
            //Sweet Alert end here

        });
    </script>

}

