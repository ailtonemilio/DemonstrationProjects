@model WebInvoiceApp.UI.Web.Models.Invoice

@{
    ViewBag.Title = "Edit Invoice: #" + @Html.DisplayFor(model => model.NumInvoice);
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<h2>Edit</h2>*@

<style>
    #textArea textarea {
        max-width: 600px;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.NumInvoice)

<fieldset>

    <div class="panel panel-primary plain toggle panelMove panelRefresh">
        @*<div class="box-header with-border">
            <h4>Edit Invoice: # @Html.DisplayFor(model => model.NumInvoice)</h4>
        </div>*@
        <div class="panel-heading">
            <h4 class="panel-title">Edit Invoice: # @Html.DisplayFor(model => model.NumInvoice)</h4>
        </div>
        <div class="panel-body">
            <div class="form-group row">
                <label class="control-label col-md-1">Issuer</label>
                <div class="col-md-3">
                    @Html.DropDownList("IdIssuer", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdIssuer, "", new { @class = "text-danger" })
                </div>

                <label class="control-label col-md-1">Issue Date</label>
                <div class="col-md-2">
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.EditorFor(model => model.IssueDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.IssueDate, "", new { @class = "text-danger" })
                </div>

                <label class="control-label col-md-1">Status</label>
                <div class="col-md-2">
                    @Html.DropDownList("IdStatusInv", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdStatusInv, "", new { @class = "text-danger" })
                </div>

                <div col-md-2></div>

            </div>
            <div class="form-group row">
                <label class="control-label col-md-1">Cliente</label>
                <div class="col-md-3">
                    @Html.DropDownList("IdClient", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdClient, "", new { @class = "text-danger" })
                </div>

                <label class="control-label col-md-1">Due Date</label>
                <div class="col-md-2">
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                </div>

                <label class="control-label col-md-1">Note</label>
                <div class="form-group col-md-4">
                    <div id="textarea ">
                        @Html.TextAreaFor(model => model.Note, new { @class = "form-control", rows = "2", maxlength = 250, onkeyup = "document.getElementById('countNotes').innerHTML=this.value.length + ' of 250 chars';" })
                        <span id="countNotes" style="font-weight: bold; font-size: 9pt; font-family: Arial; text-align: right;"></span>
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-footer text-right">
            <button id="btnsaveinvoice" type="button" value="SaveInvoice" class="btn btn-primary fa fa-check-square-o" title="Save Invoice"> Save Invoice</button>
            &nbsp;&nbsp;&nbsp;
            @Html.ActionLink(" Back to List", "Index", null, new { @class = "btn btn-danger fa fa-chevron-left" })
        </div>
    </div>



    <div class="panel panel-primary plain toggle">
        <div class="panel-header">
            <h4>Services / Products</h4>
        </div>
        <div class="panel-body">
            <h5>Services</h5>
            <div class="table-responsive-sm">
                <table id="TableService" class="table table-hover table-striped table-bordered table-sm">
                    <thead>
                        <tr>
                            <th scope="col" style="width:1%;"></th>
                            <th scope="col" style="width:1%;"></th>
                            <th scope="col" style="width:26%;">Type</th>
                            <th scope="col" style="width:26%;">Description</th>
                            <th scope="col" style="width:9%;" class="text-right">Rate</th>
                            <th scope="col" style="width:9%;" class="text-right">Hours</th>
                            <th scope="col" style="width:9%;" class="text-right">Total</th>
                            <th scope="col" style="width:9%;" class="text-right">Tax</th>
                            <th scope="col" style="width:10%;" class="text-right">Line Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Service)
                        {
                            <tr>
                                <td>
                                    <a title="Edit Service" class="fa fa-edit text-primary edits" data-id="@item.IdService" data-toggle="modal"></a>
                                </td>
                                <td>
                                    @Html.ActionLink(" ", "DeleteService", new { id = item.IdService }, new { @class = "fa fa-trash-o text-danger delete", title = "Delete", onclick = "return deletealertserv(this, event);;" })
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TypeServices)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DescriptionServ)
                                </td>
                                <td class="text-right">
                                    @Html.DisplayFor(modelItem => item.HourRate)
                                </td>
                                <td class="text-right">
                                    @Html.DisplayFor(modelItem => item.Hour)
                                </td>
                                <td class="text-right">
                                    @Html.DisplayFor(modelItem => item.TotalServ)
                                </td>
                                <td class="text-right">
                                    @Html.DisplayFor(modelItem => item.TaxServ)
                                </td>
                                <td class="text-right">
                                    @Html.DisplayFor(modelItem => item.LineTotalServ)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>

            <div class="row">
                <div class="col-md-4 text-left">
                    <button id="btninsertservice" type="button" value="NewService" class="btn btn-primary fa fa-plus-square" title="Add New Service" data-toggle="modal"> Service</button>
                </div>
                <div class="col-md-4 text-right">
                    <button id="btnincluirtaxserv" type="button" value="NewTax" class="btn btn-success fa fa-plus-square" title="Add New Tax Services" data-toggle="modal"> Tax Services</button>
                </div>
                <div class="col-md-4">
                    <table id="TableTaxServ" class="table table-hover table-striped table-bordered table-sm" style="width:100%;">
                        <thead>
                            <tr>
                                <th scope="col" style="width:25%;"></th>
                                <th scope="col" style="width:35%;" class="text-center">Tax</th>
                                <th scope="col" style="width:40%;" class="text-center">Percent</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.TypeTaxServ)
                            {
                                <tr data-id="@item.IdTypeTaxServ">
                                    <td align="center">
                                        <a class="fa fa-edit text-primary editts" title="Edit Tax" data-id="@item.IdTypeTaxServ" data-toggle="modal"></a>
                                        &nbsp;&nbsp; | &nbsp;&nbsp;
                                        @Html.ActionLink(" ", "DeleteTaxServ", new { id = item.IdTypeTaxServ }, new { @class = "fa fa-trash-o text-danger delete", title = "Delete", onclick = "return deletealerttaxserv(this, event);;" })
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => item.DescTypeTaxServ)
                                    </td>
                                    <td align="center">
                                        @Html.DisplayFor(modelItem => item.TaxServ) %
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>

            <h5>Products</h5>
            <div class="table-responsive-sm">
                <table id="TableProduct" class="table table-hover table-striped table-bordered table-sm">
                    <thead>
                        <tr>
                            <th scope="col" style="width:1%;"></th>
                            <th scope="col" style="width:1%;"></th>
                            <th scope="col" style="width:26%;">Name</th>
                            <th scope="col" style="width:26%;">Description</th>
                            <th scope="col" style="width:9%;" class="text-right">Unit Cost</th>
                            <th scope="col" style="width:9%;" class="text-right">Amount</th>
                            <th scope="col" style="width:9%;" class="text-right">Total</th>
                            <th scope="col" style="width:9%;" class="text-right">Tax</th>
                            <th scope="col" style="width:10%;" class="text-right">Line Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Product)
                        {
                            <tr data-id="@item.IdProduct">
                                <td>
                                    <a class="fa fa-edit text-primary editp" title="Edit Product" data-id="@item.IdProduct" data-toggle="modal"></a>
                                </td>
                                <td>
                                    @Html.ActionLink(" ", "DeleteProduct", new { id = item.IdProduct }, new { @class = "fa fa-trash-o text-danger delete", title = "Delete", onclick = "return deletealertprod(this, event);;" })
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TypeProducts)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DescriptionProd)
                                </td>
                                <td class="text-right">
                                    @Html.DisplayFor(modelItem => item.UnitCost)
                                </td>
                                <td class="text-right">
                                    @Html.DisplayFor(modelItem => item.Amount)
                                </td>
                                <td class="text-right">
                                    @Html.DisplayFor(modelItem => item.TotalProd)
                                </td>
                                <td class="text-right">
                                    @Html.DisplayFor(modelItem => item.TaxProd)
                                </td>
                                <td class="text-right">
                                    @Html.DisplayFor(modelItem => item.LineTotalProd)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="row">
                <div class="col-md-4 text-left">
                    <button id="btnincluirproduct" type="button" value="NewProduct" class="btn btn-primary  fa fa-plus-square" title="Add New Product" data-toggle="modal">&nbsp;&nbsp;Product</button>
                </div>

                <div class="col-md-4 text-right">
                    <button id="btnincluirtaxProd" type="button" value="NewTax" class="btn btn-success fa fa-plus-square" title="Add New Tax Product" data-toggle="modal"> Tax Produtos</button>
                </div>

                <div class="col-md-4">
                    <table id="TableTaxProd" class="table table-hover table-striped table-bordered table-sm">
                        <thead>
                            <tr>
                                <th scope="col" style="width:25%;"></th>
                                <th scope="col" style="width:35%;" class="text-center">Tax</th>
                                <th scope="col" style="width:40%;" class="text-center">Percent</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.TypeTaxProd)
                            {
                                <tr data-id="@item.IdTypeTaxProd">
                                    <td class="text-center">
                                        <a class="fa fa-edit text-primary editpt" title="Edit Tax" data-id="@item.IdTypeTaxProd" data-toggle="modal"></a>
                                        &nbsp;&nbsp; | &nbsp;&nbsp;
                                        @Html.ActionLink(" ", "DeleteTaxProd", new { id = item.IdTypeTaxProd }, new { @class = "fa fa-trash-o text-danger delete", title = "Delete", onclick = "return deletealerttaxprod(this, event);;" })
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => item.DescTypeTaxProd)
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(modelItem => item.TaxProd) %
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>

            <div class="row">
                <div class="col-md-8">

                </div>
                <div class="col-md-4">
                    <table class="table">
                        <tbody>
                            <tr>
                                <td style="width:50%;"><label>SubTotal</label></td>
                                <td style="width:50%;text-align:right;">
                                    @Html.EditorFor(model => model.SubTotal, new { htmlAttributes = new { @class = "form-control text-right", disabled = "disabled" } })
                                </td>
                            </tr>
                            <tr>
                                <td style="width:50%;"><label>Tax</label></td>
                                <td style="width:50%;text-align:right;">
                                    @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control text-right", disabled = "disabled" } })
                                </td>
                            </tr>
                            <tr>
                                <td style="width:50%;"><label>Invoice Total</label></td>
                                <td style="width:50%;text-align:right;">
                                    @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control text-right", disabled = "disabled" } })
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="panel-footer text-right">
            @Html.ActionLink("  Print", "PrintInv", new { id = Model.NumInvoice }, new { @class = "btn btn-primary btn-lg pull-right fa fa-print", target = "_blank", title = "Print Invoice" })
            &nbsp;&nbsp;&nbsp;
            @Html.ActionLink(" Back to List", "Index", null, new { @class = "btn btn-danger btn-lg fa fa-chevron-left", title = "Back to list Invoice" })
        </div>
    </div>
   
</fieldset>
}

<!-- Modal Add Product -->
<div id="ModalNewProduct" class="modal fade modal-style6" >
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="exampleModalLabel">Insert New Product</h4>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                @Html.Hidden("IdProd", "0")
                <div class="form-group">
                    <label class="control-label col-md-12">Type Service</label>
                    <div class="col-md-12">
                        <input type="text" class="form-control col-md-12" id="typeproduct" placeholder="Type Product" maxlength="250" onkeyup="document.getElementById('counttype').innerHTML=this.value.length + ' of 250 chars';">
                        <span id="counttype" style="font-weight: bold; font-size: 9pt; font-family: Arial; text-align: right;"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-12">Description</label>
                    <div class="col-md-12">
                        <input type="text" class="form-control col-md-12" id="descproduct" placeholder="Description Product" maxlength="250" onkeyup="document.getElementById('countdesc').innerHTML=this.value.length + ' of 250 chars';">
                        <span id="countdesc" style="font-weight: bold; font-size: 9pt; font-family: Arial; text-align: right;"></span>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-12">Unit Coast</label>
                    <div class="col-md-12">
                        <input type="text" class="form-control col-md-12" onkeyup="somenteNumeros(this);" id="unitcoast" placeholder="1.00" maxlength="6">
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-12">Amount</label>
                    <div class="col-md-12">
                        <input type="text" class="form-control col-md-12" onkeyup="somenteNumeros(this);" id="amount" placeholder="1.00" maxlength="10">
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button id="btnAddProduct" class="btn btn-primary fa fa-save" type="button" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Inserting">   Save</button>
                <button type="button" class="btn btn-danger fa fa-window-close" data-dismiss="modal">   Close</button>
            </div>

        </div>
    </div>
</div>

<!-- Modal New Service-->
<div class="modal fade modal-style6" id="ModalNewService" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
               <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="exampleModalLabel">Insert New Service</h4>
            </div>

            <div class="modal-body">
                @Html.Hidden("IdServ", "0")
                <div class="form-group">
                    <label class="control-label col-md-12">Type Service</label>
                    <div class="col-md-12">
                        <input type="text" class="form-control col-md-12" id="typeservice" placeholder="Type Service" maxlength="250" onkeyup="document.getElementById('counttype').innerHTML=this.value.length + ' of 250 chars';">
                        <span id="counttype" style="font-weight: bold; font-size: 9pt; font-family: Arial; text-align: right;"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-12">Description</label>
                    <div class="col-md-12">
                        <input type="text" class="form-control col-md-12" id="descservice" placeholder="Description Service" maxlength="250" onkeyup="document.getElementById('countdesc').innerHTML=this.value.length + ' of 250 chars';">
                        <span id="countdesc" style="font-weight: bold; font-size: 9pt; font-family: Arial; text-align: right;"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-12">Hours Rate</label>
                    <div class="col-md-12">
                        <input type="text" class="form-control col-md-12" onkeyup="somenteNumeros(this);" id="hourrate" placeholder="1.00" maxlength="10">
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-12">Hours</label>
                    <div class="col-md-12">
                        <input type="text" class="form-control col-md-12" onkeyup="somenteNumeros(this);" id="hours" placeholder="1.00" maxlength="6">
                    </div>
                </div>
            </div>
            <div class="modal-footer">

            </div>
            <div class="modal-footer">
                <button id="btnAddService" class="btn btn-primary fa fa-save" type="button" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Inserting">   Save</button>
                <button type="button" class="btn btn-danger fa fa-window-close" data-dismiss="modal">   Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Add Tax Services-->
<div id="ModalNewTaxServ" class="modal fade modal-style6" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="exampleModalLabel">Insert Tax</h4>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                @Html.Hidden("IdTaxServ", "0")
                <div class="form-group">
                    <label class="control-label col-md-12">Type Tax Service</label>
                    <div class="col-md-12">
                        <input type="text" class="form-control col-md-12" id="dtypetaxserv" placeholder="Type Tax" maxlength="15" onkeyup="document.getElementById('counttypeserv').innerHTML=this.value.length + ' of 15 chars';" required>
                        <span id="counttypeserv" style="font-weight: bold; font-size: 9pt; font-family: Arial; text-align: right;"></span>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-12">Percent</label>
                    <div class="col-md-12">
                        <input type="text" class="form-control col-md-12" onkeyup="somenteNumeros(this);" id="taxvalueserv" placeholder="1.00" maxlength="6" required>
                    </div>
                </div>

            </div>
            <div class="modal-footer">

            </div>
            <!-- Modal footer -->
            <div class="modal-footer">
                <div class="form-group">
                    <button id="btnAddTaxServ" class="btn btn-primary fa fa-save" type="button" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Inserting">   Save</button>
                    <button type="button" class="btn btn-danger fa fa-window-close" data-dismiss="modal">   Close</button>
                </div>
            </div>

        </div>
    </div>
</div>

<!-- Modal Add Tax Product-->
<div id="ModalNewTaxProd" class="modal fade modal-style6" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="exampleModalLabel">Insert Tax</h4>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                @Html.Hidden("IdTaxProd", "0")
                <div class="form-group">
                    <label class="control-label col-md-12">Type Tax Product</label>
                    <div class="col-md-12">
                        <input type="text" class="form-control col-md-12" id="dtypetaxprod" placeholder="Type Tax" maxlength="15" onkeyup="document.getElementById('counttypeprod').innerHTML=this.value.length + ' of 15 chars';" required>
                        <span id="counttypeprod" style="font-weight: bold; font-size: 9pt; font-family: Arial; text-align: right;"></span>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-12">Percent</label>
                    <div class="col-md-12">
                        <input type="text" class="form-control col-md-12" onkeyup="somenteNumeros(this);" id="taxvalueprod" placeholder="1.00" maxlength="6" required>
                    </div>
                </div>

            </div>
            <div class="modal-footer">

            </div>
            <!-- Modal footer -->
            <div class="modal-footer">
                <div class="form-group">
                    <button id="btnAddTaxProd" class="btn btn-primary fa fa-save" type="button" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Inserting">   Save</button>
                    <button type="button" class="btn btn-danger fa fa-window-close" data-dismiss="modal">   Close</button>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    @* Only Numbers *@
<script>
    function somenteNumeros(num) {
        var er = /[^0-9.]/;
        er.lastIndex = 0;
        var campo = num;
        if (er.test(campo.value)) {
            campo.value = "";
        }
    }
</script>

    @* Date Picker Start*@
    <script>
        $('#IssueDate').datepicker({
            uiLibrary: 'bootstrap4'
        });
    </script>

    <script>
        $('#DueDate').datepicker({
            uiLibrary: 'bootstrap4'
        });
    </script>
    @* Date Picker End*@

    @* Save Invoice *@
    <script>
        $("#btnsaveinvoice").click(function () {
            var dtIssue = $('#IssueDate').val();
            var dtDue = $('#DueDate').val();
            var IdCli = $('#IdClient').val();
            var IdIssuer = $('#IdIssuer').val();
            var IdSta = $('#IdStatusInv').val();
            var Notes = $('#Note').val();
            var SubTot = $('#SubTotal').val();
            var Tot = $('#Total').val();
            var Taxx = $('#Tax').val();
            var NumInv = $('#NumInvoice').val();
            var IdLog = $('IdLogin').val();


            if (dtIssue === "" || dtDue === "") {
                swal("Fields is empty.", "Due Date or Issue Date is empty.", "warning");
            }
            else {
                $.ajax({
                    type: 'get',
                    dataType: 'json',
                    cache: false,
                    url: "/Invoice/SaveInvoice",
                    data: {
                        dtIssue: $("#IssueDate").val(),
                        dtDue: $("#DueDate").val(),
                        Notes: $("#Note").val(),
                        IdSta: $("#IdStatusInv").val(),
                        IdIssuer: $("#IdIssuer").val(),
                        SubTot: $('#SubTotal').val(),
                        Tot: $('#Total').val(),
                        Taxx: $('#Tax').val(),
                        IdCli: $('#IdClient').val(),
                        NumInv: $("#NumInvoice").val(),
                        IdLogin: $('IdLogin').val()
                    },
                    success: function (response, textStatus, jqXHR) {
                        swal("Success!", "Invoice updated successfully !", "success")
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert('Error - ' + errorThrown);
                    }
                });
            }
        });
    </script>

    
    <script>
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }

        // Start CRUD Service -------------------------------------------------
        
        $("#btninsertservice").click(function () {
            document.getElementById("typeservice").value = "";
            document.getElementById("descservice").value = "";
            document.getElementById("hourrate").value = "";
            document.getElementById("hours").value = "";
            document.getElementById("IdServ").value = "0";

            $("#ModalNewService").modal('show');
        });

        $("#btnAddService").click(function () {
            var TypeService = $('#typeservice').val();
            var DescService = $('#descservice').val();
            var HourRate = $('#hourrate').val();
            var Hours = $('#hours').val();
            var NumInv = $('#NumInvoice').val();
            var SubTot = $('#SubTotal').val();
            var Tot = $('#Total').val();
            var Taxx = $('#Tax').val();
            var IdService = $('#IdServ').val();

            if (TypeService === "" || DescService === "" || HourRate === "" || Hours === "") {
                toastr["warning"]("Type Service or Description or Hours Rate or Hours is empty.", "Warning - Fields is empty.");
            }
            else {
                $.ajax({
                    type: 'get',
                    dataType: 'json',
                    cache: false,
                    url: "/Invoice/SaveService",
                    data: {
                        TypeService: $("#typeservice").val(),
                        DescService: $("#descservice").val(),
                        HourRate: $("#hourrate").val(),
                        Hour: $("#hours").val(),
                        NumInv: $("#NumInvoice").val(),
                        IdIssuer: $("#IdIssuer").val(),
                        SubTot: $('#SubTotal').val(),
                        Tot: $('#Total').val(),
                        Taxx: $('#Tax').val(),
                        IdService: $('#IdServ').val()
                    },
                    success: function (response, textStatus, jqXHR) {
                        document.getElementById("typeservice").value = "";
                        document.getElementById("descservice").value = "";
                        document.getElementById("hourrate").value = "";
                        document.getElementById("hours").value = "";
                        document.getElementById("SubTotal").value = SubTot;
                        document.getElementById("Total").value = Tot;
                        document.getElementById("Tax").value = Taxx;
                        document.getElementById("IdServ").value = IdService;
                        $("#ModalNewService").modal('hide');
                        $("#TableService").change(location.reload());
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        toastr["error"]("Check if hours rate or hours is in decimal or integer.", "Error");
                    }
                });
            }
        });

        $(".edits").click(function () {
            var id = $(this).attr("data-id");

            $.ajax({
                type: 'get',
                dataType: 'json',
                cache: false,
                url: "/Invoice/GetService",
                data: {
                    Id: id
                },
                success: function (response, textStatus, jqXHR) {

                    $("#ModalNewService").modal('show');

                    document.getElementById("typeservice").value = response.typeservices;
                    document.getElementById("descservice").value = response.descservices;
                    document.getElementById("hourrate").value = response.hourrate;
                    document.getElementById("hours").value = response.hours;
                    document.getElementById("IdServ").value = response.idservice;
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Error - ' + errorThrown);
                }
            });
        });

        @* DELETE Service *@
        function deletealertserv(ctl, event) {
            // STORE HREF ATTRIBUTE OF LINK CTL (THIS) BUTTON
            var defaultAction = $(ctl).prop("href");
            // CANCEL DEFAULT LINK BEHAVIOUR
            event.preventDefault();
            swal({
                title: "Are you sure?",
                text: "You will not be able to recover this file!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                cancelButtonClass: "btn-primary",
                cancelButtonText: "No, cancel!",
                closeOnConfirm: false,
                closeOnCancel: true
            },
                function (isConfirm) {
                    if (isConfirm) {
                        swal({ title: "Deleted!", text: "Your file has been deleted.", type: "success", confirmButtonText: "OK!", closeOnConfirm: true },
                            function () {
                                // RESUME THE DEFAULT LINK ACTION
                                window.location.href = defaultAction;
                                return true;
                            });
                    } else {
                        swal("Cancelled", "Your file is safe.", "error");
                        return false;
                    }
                });
        }
        // End CRUD Service ---------------------------------------------------

        // Start CRUD Service  ------------------------------------------------
        $("#btnincluirproduct").click(function () {
            document.getElementById("typeproduct").value = "";
            document.getElementById("descproduct").value = "";
            document.getElementById("unitcoast").value = "";
            document.getElementById("amount").value = "";
            document.getElementById("IdProd").value = "0";

            $("#ModalNewProduct").modal('show');
        });

        $("#btnAddProduct").click(function () {
            var TypeProduct = $('#typeproduct').val();
            var DescProduct = $('#descproduct').val();
            var UnitCoast = $('#unitcoast').val();
            var Amount = $('#amount').val();
            var NumInv = $('#NumInvoice').val();
            var SubTot = $('#SubTotal').val();
            var Tot = $('#Total').val();
            var Taxx = $('#Tax').val();
            var IdProduct = $('#IdProd').val();

            if (TypeProduct === "" || DescProduct === "" || UnitCoast === "" || Amount === "") {
                toastr["warning"]("Type Product or Description or Unit Cost or Amount is empty.", "Warning - Fields is empty.");
            }
            else {
                $.ajax({
                    type: 'get',
                    dataType: 'json',
                    cache: false,
                    url: "/Invoice/SaveProduct",
                    data: {
                        TypeProduct: $("#typeproduct").val(),
                        DescProduct: $("#descproduct").val(),
                        UnitCoast: $("#unitcoast").val(),
                        Amount: $("#amount").val(),
                        NumInv: $("#NumInvoice").val(),
                        IdIssuer: $("#IdIssuer").val(),
                        SubTot: $('#SubTotal').val(),
                        Tot: $('#Total').val(),
                        Taxx: $('#Tax').val(),
                        IdProduct: $('#IdProd').val()
                    },
                    success: function (response, textStatus, jqXHR) {
                        document.getElementById("typeproduct").value = "";
                        document.getElementById("descproduct").value = "";
                        document.getElementById("unitcoast").value = "";
                        document.getElementById("amount").value = "";
                        document.getElementById("SubTotal").value = SubTot;
                        document.getElementById("Total").value = Tot;
                        document.getElementById("Tax").value = Taxx;
                        document.getElementById("IdProd").value = IdProduct;
                        $("#ModalNewProduct").modal('hide');
                        $("#TableProduct").change(location.reload());
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        toastr["error"]("Check if unit cost or amount is in decimal or integer.", "Error");
                    }
                });
            }
        });

        $(".editp").click(function () {
            var id = $(this).attr("data-id");

            $.ajax({
                type: 'get',
                dataType: 'json',
                cache: false,
                url: "/Invoice/GetProduct",
                data: {
                    Id: id
                },
                success: function (response, textStatus, jqXHR) {

                    $("#ModalNewProduct").modal('show');

                    document.getElementById("typeproduct").value = response.typeproduct;
                    document.getElementById("descproduct").value = response.descproduct;
                    document.getElementById("unitcoast").value = response.cost;
                    document.getElementById("amount").value = response.amount;
                    document.getElementById("IdProd").value = response.idproduct;
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Error - ' + errorThrown);
                }
            });
        });

        @* DELETE Product *@
        function deletealertprod(ctl, event) {
            // STORE HREF ATTRIBUTE OF LINK CTL (THIS) BUTTON
            var defaultAction = $(ctl).prop("href");
            // CANCEL DEFAULT LINK BEHAVIOUR
            event.preventDefault();
            swal({
                title: "Are you sure?",
                text: "You will not be able to recover this file!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                cancelButtonClass: "btn-primary",
                cancelButtonText: "No, cancel!",
                closeOnConfirm: false,
                closeOnCancel: true
            },
                function (isConfirm) {
                    if (isConfirm) {
                        swal({ title: "Deleted!", text: "Your file has been deleted.", type: "success", confirmButtonText: "OK!", closeOnConfirm: true },
                            function () {
                                // RESUME THE DEFAULT LINK ACTION
                                window.location.href = defaultAction;
                                return true;
                            });
                    } else {
                        swal("Cancelled", "Your file is safe.", "error");
                        return false;
                    }
                });
        }
        // End CRUD Product ---------------------------------------------------

        // Start CRUD Tax Service  ---------------------------------------------
        $("#btnincluirtaxserv").click(function () {
            document.getElementById("dtypetaxserv").value = "";
            document.getElementById("taxvalueserv").value = "";
            document.getElementById("IdTaxServ").value = "0";

            $("#ModalNewTaxServ").modal('show');
        });

        $("#btnAddTaxServ").click(function () {
            var DescTypeTax = $('#dtypetaxserv').val();
            var TaxValue = $('#taxvalueserv').val();
            var NumInv = $('#NumInvoice').val();
            var IdTax = $('#IdTaxServ').val();

            if (DescTypeTax === "" || TaxValue === "") {
                toastr["warning"]("Type Tax or Tax Value is empty.", "Warning - Fields is empty.");
            }
            else {
                $.ajax({
                    type: 'get',
                    dataType: 'json',
                    cache: false,
                    url: "/Invoice/SaveTax",
                    data: {
                        DescTypeTax: $('#dtypetaxserv').val(),
                        TaxValue: $('#taxvalueserv').val(),
                        IdTax: $('#IdTaxServ').val(),
                        NumInv: $('#NumInvoice').val(),
                        CalcServ: "true",
                        CalcProd: "false"
                    },
                    success: function (response, textStatus, jqXHR) {
                        document.getElementById("dtypetaxserv").value = "";
                        document.getElementById("taxvalueserv").value = "";
                        document.getElementById("IdTaxServ").value = IdTax;
                        $("#ModalNewTaxServ").modal('hide');
                        $("#TableTaxServ").change(location.reload());
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        toastr["error"]("Check if tax value is in decimal or integer.", "Error");

                    }
                });
            }
        });

        $(".editts").click(function () {
            var id = $(this).attr("data-id");

            $.ajax({
                type: 'get',
                dataType: 'json',
                cache: false,
                url: "/Invoice/GetTaxServ",
                data: {
                    Id: id
                },
                success: function (response, textStatus, jqXHR) {
                    $("#ModalNewTaxServ").modal('show');

                    document.getElementById("dtypetaxserv").value = response.desctax;
                    document.getElementById("taxvalueserv").value = response.valuetax;
                    document.getElementById("IdTaxServ").value = response.idtaxserv;
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    toastr["error"]("Check if unit cost or amount is in decimal or integer.", "Error");
                }
            });
        });

        @* DELETE Tax *@
        function deletealerttaxserv(ctl, event) {
            // STORE HREF ATTRIBUTE OF LINK CTL (THIS) BUTTON
            var defaultAction = $(ctl).prop("href");
            // CANCEL DEFAULT LINK BEHAVIOUR
            event.preventDefault();
            swal({
                title: "Are you sure?",
                text: "You will not be able to recover this file!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                cancelButtonClass: "btn-primary",
                cancelButtonText: "No, cancel!",
                closeOnConfirm: false,
                closeOnCancel: true
            },
                function (isConfirm) {
                    if (isConfirm) {
                        swal({ title: "Deleted!", text: "Your file has been deleted.", type: "success", confirmButtonText: "OK!", closeOnConfirm: true },
                            function () {
                                // RESUME THE DEFAULT LINK ACTION
                                window.location.href = defaultAction;
                                return true;
                            });
                    } else {
                        swal("Cancelled", "Your file is safe.", "error");
                        return false;
                    }
                });
        }
        // End CRUD Tax Service  -----------------------------------------------

         // Start CRUD Tax Product  ---------------------------------------------
        $("#btnincluirtaxProd").click(function () {
            document.getElementById("dtypetaxprod").value = "";
            document.getElementById("taxvalueprod").value = "";
            document.getElementById("IdTaxProd").value = "0";

            $("#ModalNewTaxProd").modal('show');
        });

        $("#btnAddTaxProd").click(function () {
            var DescTypeTax = $('#dtypetaxprod').val();
            var TaxValue = $('#taxvalueprod').val();
            var NumInv = $('#NumInvoice').val();
            var IdTax = $('#IdTaxProd').val();

            if (DescTypeTax === "" || TaxValue === "") {
                toastr["warning"]("Type Tax or Tax Value is empty.", "Warning - Fields is empty.");
            }
            else {
                $.ajax({
                    type: 'get',
                    dataType: 'json',
                    cache: false,
                    url: "/Invoice/SaveTax",
                    data: {
                        DescTypeTax: $('#dtypetaxprod').val(),
                        TaxValue: $('#taxvalueprod').val(),
                        IdTax: $('#IdTaxProd').val(),
                        NumInv: $('#NumInvoice').val(),
                        CalcServ: "false",
                        CalcProd: "true"
                    },
                    success: function (response, textStatus, jqXHR) {
                        document.getElementById("dtypetaxprod").value = "";
                        document.getElementById("taxvalueprod").value = "";
                        document.getElementById("IdTaxProd").value = IdTax;
                        $("#ModalNewTaxProd").modal('hide');
                        $("#TableTaxProd").change(location.reload());
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        toastr["error"]("Check if tax value is in decimal or integer.", "Error");
                    }
                });
            }
        });

        $(".editpt").click(function () {
            var id = $(this).attr("data-id");

            $.ajax({
                type: 'get',
                dataType: 'json',
                cache: false,
                url: "/Invoice/GetTaxProd",
                data: {
                    Id: id
                },
                success: function (response, textStatus, jqXHR) {
                    $("#ModalNewTaxProd").modal('show');

                    document.getElementById("dtypetaxprod").value = response.desctax;
                    document.getElementById("taxvalueprod").value = response.valuetax;
                    document.getElementById("IdTaxProd").value = response.idtaxprod;
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Error - ' + errorThrown);
                }
            });
        });

        @* DELETE Tax *@
        function deletealerttaxprod(ctl, event) {
            // STORE HREF ATTRIBUTE OF LINK CTL (THIS) BUTTON
            var defaultAction = $(ctl).prop("href");
            // CANCEL DEFAULT LINK BEHAVIOUR
            event.preventDefault();
            swal({
                title: "Are you sure?",
                text: "You will not be able to recover this file!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                cancelButtonClass: "btn-primary",
                cancelButtonText: "No, cancel!",
                closeOnConfirm: false,
                closeOnCancel: true
            },
                function (isConfirm) {
                    if (isConfirm) {
                        swal({ title: "Deleted!", text: "Your file has been deleted.", type: "success", confirmButtonText: "OK!", closeOnConfirm: true },
                            function () {
                                // RESUME THE DEFAULT LINK ACTION
                                window.location.href = defaultAction;
                                return true;
                            });
                    } else {
                        swal("Cancelled", "Your file is safe.", "error");
                        return false;
                    }
                });
        }
         // End CRUD Tax Product  -----------------------------------------------
    </script>

    @* CRUD Tax Product*@
    <script>
        

    </script>

}
