@model IEnumerable<HWebTS.Models.BankInfo>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Bank Info</h2>

<p>
    @*@Html.ActionLink(" Create New", "Create", null, new { @class = "fa fa-plus btn btn-success" })*@
    <a href="~/BankInfo/Create" title="Create New" class="ladda-button btn btn-success">
        <img src="../../images/icon/add.png" />&nbsp;&nbsp;Create New
    </a>
</p>
<div class="card">
    <div class="card-body">
        <table id="myTable" class="table table-striped table-bordered nowrap" cellspacing="0" width="100%">
            <thead>
                <tr>
                    <th></th>
                    <th>
                        @Html.DisplayNameFor(model => model.Bank.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Customer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.AccountNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TransitNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SwiftCode)
                    </th>
                    <th>
                        <label>Address</label>
                    </th>
                    <th>
                        <label>Postal Code</label>
                    </th>
                    <th>
                        <label>City</label>
                    </th>
                    <th>
                        <label>Province</label>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.ActionLink(" ", "Edit", new { id = item.IdBankInfo.ToString() }, new { @class = "ladda-button btn btn-blue fa fa-edit edit", title = "Edit" })&nbsp;
                            @Html.ActionLink(" ", "Details", new { id = item.IdBankInfo }, new { @class = "ladda-button btn btn-success far fa-address-card text-white", title = "Details" })&nbsp;
                            <button type="button" class="ladda-button btn btn-danger fas fa-trash-alt text-white delete" data-id="@item.IdBankInfo" title="Delete Email Config"></button>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bank.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Customer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AccountNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TransitNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SwiftCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BankAddress)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BankPostalCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BankCity)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BankProvince)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

        @section Scripts {
            <script>
                function deletealert(ctl, event) {
                    // STORE HREF ATTRIBUTE OF LINK CTL (THIS) BUTTON
                    var defaultAction = $(ctl).prop("href");
                    // CANCEL DEFAULT LINK BEHAVIOUR
                    event.preventDefault();
                    swal({
                        title: "Are you sure?",
                        text: "You will not be able to recover this file!",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: "btn-danger",
                        confirmButtonText: "Yes, delete it!",
                        cancelButtonText: "No, cancel!",
                        closeOnConfirm: false,
                        closeOnCancel: true
                    },
                        function (isConfirm) {
                            if (isConfirm) {
                                swal({ title: "Deleted!", text: "Your file has been deleted.", type: "success", confirmButtonText: "OK!", closeOnConfirm: true },
                                    function () {
                                        // RESUME THE DEFAULT LINK ACTION
                                        window.location.href = defaultAction;
                                        return true;
                                    });
                            } else {
                                swal("Cancelled", "Your file is safe.", "error");
                                return false;
                            }
                        });
                }

                $(".delete").click(function () {
                    var id = $(this).attr("data-id");

                    //Sweet Alert V2
                    event.preventDefault();
                    Swal.fire({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.value) {
                            //Action is here
                            $.ajax({
                                type: 'get',
                                dataType: 'json',
                                cache: false,
                                url: "/BankInfo/DeleteItem",
                                data: {
                                    Id: id
                                },
                                success: function (response, textStatus, jqXHR) {
                                    if (response.deleted == "true") {
                                        //Swal.fire({ title: "Deleted!", text: "Your Client has been deleted.", type: "success", confirmButtonText: "OK!", closeOnConfirm: true });

                                        $.toast({
                                            heading: 'Success',
                                            text: 'Item deleted successfully!',
                                            showHideTransition: 'slide',
                                            position: 'top-right',
                                            icon: 'success'
                                        })

                                        //location.reload();
                                        $("#myTable").change(location.reload());

                                        return true;
                                    }
                                    else {
                                        Swal.fire({ title: "Error!", text: "Unable to delete this item!", type: "error", confirmButtonText: "OK!", closeOnConfirm: true });
                                    }
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    Swal.fire({ title: "Error!", text: "Unable to delete this item!", type: "error", confirmButtonText: "OK!", closeOnConfirm: true });
                                    //alert('Error - ' + errorThrown);
                                }
                            });
                        } else {
                            Swal.fire("Cancelled", "Your Issuer is safe.", "error");
                            return false;
                        }
                    })
                });

            </script>
        }
