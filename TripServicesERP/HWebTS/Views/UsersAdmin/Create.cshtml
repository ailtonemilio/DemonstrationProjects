@model HWebTS.Common.Identity.Users.AspNetRegisterVM

@{
    /**/

    ViewBag.Title = "Register";
}

<div class="modal-dialog">
    <div class="modal-content">

        @using (Html.BeginForm())
        {
            <div class="modal-header modal-header-danger">
                <button type="button" class="close returnuser" data-dismiss="modal">
                    <span aria-hidden="true">×</span><span class="sr-only">Close</span>
                </button>
                <h4 class="modal-title">Create new User</h4>
            </div>

            @Html.AntiForgeryToken()

            <div class="modal-body">

                @if (ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Any()))
                {
                    <div class="alert alert-danger alert-dismissible fade in">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>
                }

                @*<div class="alert alert-danger">

                </div>*@


                @*@Html.ValidationMessage("erroCriandoUsuario")*@

                <div class="col-md-1"></div>
                <div class="col-md-10">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Alias, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.DateBirth, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group date" data-provide="datepicker">
                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                            @Html.EditorFor(model => model.DateBirth, new { htmlAttributes = new { @class = "form-control date" } })

                        </div>
                        @Html.ValidationMessageFor(model => model.DateBirth, "", new { @class = "text-danger" })
                    </div>*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserImage, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.UserImage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserImage, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label class="control-label">
                            Selecione as Roles para este usuário
                        </label>
                        <div>
                            @foreach (var item in (SelectList)ViewBag.RoleId)
                            {
                                <input type="checkbox" name="SelectedRoles" value="@item.Value" class="checkbox-inline" />
                                @Html.Label(item.Value, new { @class = "control-label" })
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-1"></div>
            </div>

            <div class="modal-footer text-right">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Add User" class="btn btn-primary" />&nbsp;&nbsp;
                        <button type="button" class="btn btn-danger returnuser" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        }
    </div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(".returnuser").click(function () {
            $(location).attr('href', '../UsersAdmin/Index');
        });
    </script>
}
